{"name":"Rocketeer","tagline":"Rocketeer provides a fast and easy way to deploy your Laravel projects","body":"Rocketeer [![Build Status](https://travis-ci.org/Anahkiasen/rocketeer.png?branch=master)](https://travis-ci.org/Anahkiasen/rocketeer)\r\n=========\r\n\r\n## Setup\r\n\r\nRocketeer provides a fast and easy to set-up way to deploy your Laravel projects.\r\n\r\n**Rocketeer requires Laravel 4.1 as it uses the new _illuminate/remote_ component***.\r\n\r\n### With Package Installer\r\n\r\nSimply do this :\r\n\r\n```\r\nartisan package:install anahkiasen/rocketeer\r\nartisan config:publish anahkiasen/rocketeer\r\n```\r\n\r\n### Manually\r\n\r\nTo use it, add the following to your `composer.json` file :\r\n\r\n```json\r\n\"anahkiasen/rocketeer\": \"dev-master\"\r\n```\r\n\r\nAnd this line to the `providers` array in your `app/config/app.php` file :\r\n\r\n```php\r\n'Rocketeer\\RocketeerServiceProvider',\r\n```\r\n\r\nThen publish the config :\r\n\r\n```\r\nartisan config:publish anahkiasen/rocketeer\r\n```\r\n\r\n### Additional steps\r\n\r\nNow before you go all crazy and deploy on everything you find you have to files to set up :\r\n\r\n- The first one is the `app/config/remote.php` file, this will set up the **Remote** Laravel component, use it to provide the connection informations for the various servers you want to deploy to\r\n- Then the `app/config/packages/anahkiasen/rocketeer/config.php` file, where you'll provide more concrete deployment-related informations – see the example file below for what it might look like if you're feeling a little lost\r\n\r\n## Using Rocketeer\r\n\r\nThe available commands in Rocketeer are :\r\n\r\n```\r\ndeploy\r\n  deploy:setup                Set up the website for deployment\r\n  deploy:deploy               Deploy the website.\r\n  deploy:cleanup              Clean up old releases from the server\r\n  deploy:current              Displays what the current release is\r\n  deploy:rollback {release}   Rollback to a specific release\r\n  deploy:rollback             Rollback to the previous release\r\n  deploy:teardown             Removes the remote applications and existing caches\r\n```\r\n\r\n## Example config file\r\n\r\n```php\r\n<?php return array(\r\n\r\n  // Git Repository\r\n  //////////////////////////////////////////////////////////////////////\r\n\r\n  'git' => array(\r\n\r\n    // The SSH/HTTPS adress to your Git Repository\r\n    'repository' => 'https://bitbucket.org/myUsername/facebook.git',\r\n\r\n    // Its credentials\r\n    'username'   => 'myUsername',\r\n    'password'   => 'myPassword',\r\n\r\n    // The branch to deploy\r\n    'branch'     => 'master',\r\n  ),\r\n\r\n  // Remote server\r\n  //////////////////////////////////////////////////////////////////////\r\n\r\n  'remote' => array(\r\n\r\n    // The root directory where your applications will be deployed\r\n    'root_directory'   => '/home/www/',\r\n\r\n    // The default name of the application to deploy\r\n    'application_name' => 'facebook',\r\n\r\n    // The number of releases to keep at all times\r\n    'releases' => 4,\r\n  ),\r\n\r\n  // Tasks\r\n  //////////////////////////////////////////////////////////////////////\r\n\r\n  // Here you can define custom tasks to execute after certain actions\r\n  'tasks' => array(\r\n\r\n    // Tasks to execute before commands\r\n    'before' => array(),\r\n\r\n    // Tasks to execute after commands\r\n    'after' => array(\r\n      'deploy:deploy'  => array(\r\n        'bower install',\r\n        'php artisan basset:build'\r\n      ),\r\n    ),\r\n  ),\r\n\r\n);\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}